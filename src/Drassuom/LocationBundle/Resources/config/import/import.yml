drassuom_import:
    types:
        geoname_continent:
            writer: drassuom_location.import.writer.continent
            writer_options: {class: Drassuom\LocationBundle\Entity\Continent}
            ref_fields: [geonameId]
            known_extensions:
                txt: csv
            csv:
                delimiter: "\t"
                mapping:
                    iso:        {path: 0}
                    name:       {path: 1}
                    geonameId:  {path: 2}


        geoname_country:
            writer: drassuom_location.import.writer.country
            writer_options: {class: Drassuom\LocationBundle\Entity\Country}
            ref_fields: [iso]
            known_extensions:
                txt: csv
            csv:
                delimiter: "\t"
                mapping:
                    iso:                {path: 0}
                    iso3:               {path: 1}
                    isoNumeric:         {path: 2}
                    fips:               {path: 3}
                    name:               {path: 4}
                    area:               {path: 6}
                    population:         {path: 7}
                    parent:             {path: 8}
                    tld:                {path: 9}
                    currencyCode:       {path: 10}
                    currencyName:       {path: 11}
                    indPhone:           {path: 12}
                    postalCodeFormat:   {path: 13}
                    postalCodeRegex:    {path: 14}
                    languages:          {path: 15}
                    geonameId:          {path: 16}
                    neighbours:         {path: 17}
            converters:
                parent:
                    drassuom_import.converter.orm.entity_finder:
                         params: {field: iso, entity: "DrassuomLocationBundle:Continent"}
                neighbours:
                    drassuom_location.converter.list:
                        params: {refField: iso, delimiter: ",", entity: "DrassuomLocationBundle:Country"}
                        field:  neighbours

        geoname_country2:
            writer: drassuom_location.import.writer.country
            writer_options: {class: Drassuom\LocationBundle\Entity\Country}
            ref_fields: [geonameId]
            known_extensions:
                txt: csv
            conditions:
                is_country:
                    key: featureCode
                    call: "in_array"
                    params: {0: PCLI}
                    merge: false
            filters:
                exclude: [!is_country]
            csv:
                delimiter: "\t"
                mapping:
                    geonameId:          {path: 0}
                    name:               {path: 1}
                    latitude:           {path: 4}
                    longitude:          {path: 5}
                    featureCode:        {path: 7}

        geoname_adm1:
            writer: drassuom_location.import.writer.location
            writer_options: {class: Drassuom\LocationBundle\Entity\AdmDivision1}
            ref_fields: [geonameId]
            known_extensions:
                txt: csv
            conditions:
                is_adm1:
                    key: featureCode
                    call: "in_array"
                    params: {0: ADM1}
                    merge: false
            filters:
                exclude: [!is_adm1]
            csv:
                delimiter: "\t"
                mapping:
                    geonameId:          {path: 0}
                    name:               {path: 1}
                    latitude:           {path: 4}
                    longitude:          {path: 5}
                    featureCode:        {path: 7}
                    parent:             {path: 8}
                    code:               {path: 10}
                    population:         {path: 14}
            converters:
                parent:
                    drassuom_import.converter.orm.entity_finder:
                         params: {field: iso, entity: "DrassuomLocationBundle:Country"}

        geoname_adm2:
            writer: drassuom_location.import.writer.location
            writer_options: {class: Drassuom\LocationBundle\Entity\AdmDivision2}
            ref_fields: [geonameId]
            known_extensions:
                txt: csv
            conditions:
                is_adm2:
                    key: featureCode
                    call: "in_array"
                    params: {0: ADM2}
                    merge: false
            filters:
                exclude: [!is_adm2]
            csv:
                delimiter: "\t"
                mapping:
                    geonameId:          {path: 0}
                    name:               {path: 1}
                    latitude:           {path: 4}
                    longitude:          {path: 5}
                    featureCode:        {path: 7}
                    parent:             {path: 10}
                    code:               {path: 11}
                    population:         {path: 14}
            converters:
                parent:
                    drassuom_import.converter.orm.entity_finder:
                         params: {field: code, entity: "DrassuomLocationBundle:AdmDivision1"}

        geoname_city:
            writer: drassuom_location.import.writer.country
            writer_options: {class: Drassuom\LocationBundle\Entity\Country}
            ref_fields: [geonameId]
            known_extensions:
                txt: csv
            csv:
                delimiter: "\t"
                mapping:
                    geonameId:                  {path: 0}
                    name:                       {path: 1}
                    latitude:                   {path: 4}
                    longitude:                  {path: 5}